<UserControl x:Class="MP2.Mp2RoutineGui"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MP2" xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" 
             d:DesignHeight="auto" d:DesignWidth="auto">
    <!--this allows you to <bind> DataContext of the grid to your settings.-->
    <!--https://learn.microsoft.com/en-us/dotnet/api/system.windows.frameworkelement.datacontext?view=windowsdesktop-8.0-->
    <TabControl DataContext="{x:Static local:Mp2RoutineSettings.Instance}">
        <TabItem Header="User Verify" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#B22E4631" BorderBrush="#FF50D63E">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="Expiration Time:" />
                <Label Grid.Row="0" Grid.Column="1" Content="{Binding DaysLeft}" />
                <Label Grid.Row="1" Grid.Column="0" Content="User Key: " />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=UserKey, Mode=TwoWay}" MinWidth="100" MaxWidth="200" ToolTip=""/>
            </Grid>
        </TabItem>
        <TabItem BorderThickness="1" Header="General Settings" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#B22E4631" BorderBrush="#FF50D63E">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <GroupBox Grid.Row="0" Grid.Column="0" Header="Ranges">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />

                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="Combat Range: " Margin="3,5,3,1"
                       ToolTipService.ToolTip="How far to consider combat targets. Do not set too high, or the bot might get stuck running back and forth trying to get to a target." />
                        <TextBox Name="CombatRangeTextBox" Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding CombatRange, Mode=TwoWay}"/>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="1" Grid.Column="0" Header="Options">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <CheckBox Content="SkipShrines" Grid.Row="0" Grid.Column="0" IsChecked="{Binding SkipShrines}" Margin="3,5,3,1"></CheckBox>
                        <CheckBox Content="Attack in Place" Grid.Row="1" Grid.Column="0" IsChecked="{Binding AlwaysAttackInPlace}" Margin="3,5,3,1"></CheckBox>
                        <CheckBox Content="Simulacrum?" Grid.Row="2" Grid.Column="0" IsChecked="{Binding Simulacrum}" Margin="3,5,3,1"></CheckBox>
                    </Grid>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem BorderThickness="1" Header="Skills" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#B22E4631" BorderBrush="#FF50D63E">
            <GroupBox Header="Skills:">
                <WrapPanel>
                    <DataGrid CanUserSortColumns="False" ItemsSource="{Binding MapperRoutineSelector}" AutoGenerateColumns="False" AllowDrop="False" CanUserAddRows="False" FontFamily="Segoe UI Semibold" Width="787" >
                        <DataGrid.RowHeaderStyle>
                            <Style/>
                        </DataGrid.RowHeaderStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Skillbar: " Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Label Content="{Binding SlotName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Slot: " Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Label Content="{Binding SlotIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Enable" Width="60">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enabled ?" Width="Auto"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header = "Cast On Me?" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <CheckBox HorizontalAlignment = "Center" IsChecked="{Binding CastOnMe, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Cast On Me ?" Width="Auto"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Type" Width="250">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox SelectedValue="{Binding SkType, UpdateSourceTrigger=PropertyChanged}" Width="201" HorizontalAlignment="Left" IsSynchronizedWithCurrentItem="True">
                                            <ComboBox.Items>
                                                <ComboBoxItem Uid="0" x:Name="MainS" Content="Main Skill"/>
                                                <ComboBoxItem Uid="1" x:Name="SecondarySkill" Content="Secondary Skill"/>
                                                <ComboBoxItem x:Name="SecondWeaponSkill" Content="Secondary Weapon Skill"/>
                                                <ComboBoxItem x:Name="BuffSupport" Content="Buff Support"/>
                                                <ComboBoxItem x:Name="Curses" Content="Curse"/>
                                                <ComboBoxItem x:Name="TemporalisMove" Content="Temporalis Move"/>
                                                <ComboBoxItem x:Name="BossSkillss" Content="Boss Skill"/>
                                            </ComboBox.Items>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Delay(sec): " Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Slider Name="Delay" Minimum="0" Margin="0,5,0,0" Width="100" Value="{Binding Path=Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TickFrequency="0.1" IsSnapToTickEnabled="True" SmallChange="0.1" LargeChange="1" Maximum="60" AutoToolTipPrecision="1" VerticalAlignment="Center"/>
                                            <TextBox Name="tbDelay" Text="{Binding ElementName=Delay, Path=Value}" Width="35"  HorizontalAlignment="Right"  Margin="5,5,5,5" VerticalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </WrapPanel>
            </GroupBox>
        </TabItem>
    </TabControl>
</UserControl>
